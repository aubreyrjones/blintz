def some_math(){
  var s;
  
  s = 2 * 4 + (3 + 6); // 21
  return s + s - 2; // 40
}

def using_a_struct(){
  var Fraction fract;
  fract.init(2, 4);

  return fract.divide();
}

def loops(){
  var a, b, c;
  a = true;

  //simple while loop.
  while(a){
    a = false;
  }
  
  a = 6;
  while(a < 12){
    a = a + 1; 
  }
  
  //break
  while(c){
    break;
  }
  
  //also 'next', but I can't think of a trivial case
}

// Recursive function
def fib(n){
  if (n == 1 || n == 0){
    return 1;
  }
  return n + fib(n - 1);
}

struct SimpleStruct {
  var @a;
  var @b;

  def init(a, b){
    @a = a;
    @b = b;
  }
}

// Class-like struct is supported, but no inheritance.
struct Fraction {
  var SimpleStruct @structMember;

  def init(n, d){
    @structMember.init(n, d);
  }

  def num(){
    return @structMember.a;
  }

  def denom(){
    return @structMember.b;
  }

  def divide(){
    return @structMember.a / @structMember.b;
  }
}

// entry point
def main(){
  loops();
  fib(23);
}
