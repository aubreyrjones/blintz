digraph x {
node [fontsize="10" shape="box" size="5"]
90104080 [label="_Start_ ::= -> module_statements [[_End_]]\nmodule_statements ::= ->   [[_End_, def]]\nmodule_statements ::= -> global_declaration [[_End_, def]]\nmodule_statements ::= -> module_statements global_declaration [[_End_, def]]\nglobal_declaration ::= -> def identifier ( formal_params ) statement [[_End_, def]]"]
90104080 -> 90103520 [label="module_statements"]
90104080 -> 90146710 [label=" "]
90104080 -> 90176700 [label="global_declaration"]
90104080 -> 90102810 [label="def"]
90103520 [label="_Start_ ::= module_statements -> [[_End_]]\nmodule_statements ::= module_statements -> global_declaration [[_End_, def]]\nglobal_declaration ::= -> def identifier ( formal_params ) statement [[_End_, def]]"]
90103520 -> 90103170 [label="global_declaration"]
90103520 -> 90102810 [label="def"]
90103170 [label="module_statements ::= module_statements global_declaration -> [[_End_, def]]"]
90102810 [label="global_declaration ::= def -> identifier ( formal_params ) statement [[_End_, def]]"]
90102810 -> 90102480 [label="identifier"]
90102480 [label="global_declaration ::= def identifier -> ( formal_params ) statement [[_End_, def]]"]
90102480 -> 90102150 [label="("]
90102150 [label="global_declaration ::= def identifier ( -> formal_params ) statement [[_End_, def]]"]
90102150 -> 90101820 [label="formal_params"]
90101820 [label="global_declaration ::= def identifier ( formal_params -> ) statement [[_End_, def]]"]
90101820 -> 90100890 [label=")"]
90100890 [label="global_declaration ::= def identifier ( formal_params ) -> statement [[_End_, def]]\nstatement ::= -> primary_statement statement_term [[_End_, def]]\nstatement ::= -> { statement primary_statement } [[_End_, def]]\nprimary_statement ::= -> Expr = Expr [[statement_term]]\nprimary_statement ::= -> if ( Expr ) statement elsif_list else [[statement_term]]\nprimary_statement ::= -> return Expr [[statement_term]]"]
90100890 -> 90100460 [label="statement"]
90100890 -> 90100100 [label="primary_statement"]
90100890 -> 90129450 [label="{"]
90100890 -> 90127580 [label="Expr"]
90100890 -> 90126440 [label="if"]
90100890 -> 90153020 [label="return"]
90100460 [label="global_declaration ::= def identifier ( formal_params ) statement -> [[_End_, def]]"]
90100100 [label="statement ::= primary_statement -> statement_term [[Expr, _End_, def, eslif, if, return, single_elsif, statement_term, {, }]]"]
90100100 -> 90130450 [label="statement_term"]
90130450 [label="statement ::= primary_statement statement_term -> [[Expr, _End_, def, eslif, if, return, single_elsif, statement_term, {, }]]"]
90129450 [label="statement ::= { -> statement primary_statement } [[Expr, _End_, def, eslif, if, return, single_elsif, statement_term, {, }]]\nstatement ::= -> primary_statement statement_term [[Expr, if, return]]\nstatement ::= -> { statement primary_statement } [[Expr, if, return]]\nprimary_statement ::= -> Expr = Expr [[statement_term]]\nprimary_statement ::= -> if ( Expr ) statement elsif_list else [[statement_term]]\nprimary_statement ::= -> return Expr [[statement_term]]"]
90129450 -> 90128720 [label="statement"]
90129450 -> 90100100 [label="primary_statement"]
90129450 -> 90129450 [label="{"]
90129450 -> 90127580 [label="Expr"]
90129450 -> 90126440 [label="if"]
90129450 -> 90153020 [label="return"]
90128720 [label="statement ::= { statement -> primary_statement } [[Expr, _End_, def, eslif, if, return, single_elsif, statement_term, {, }]]\nprimary_statement ::= -> Expr = Expr [[}]]\nprimary_statement ::= -> if ( Expr ) statement elsif_list else [[}]]\nprimary_statement ::= -> return Expr [[}]]"]
90128720 -> 90128330 [label="primary_statement"]
90128720 -> 90127580 [label="Expr"]
90128720 -> 90126440 [label="if"]
90128720 -> 90153020 [label="return"]
90128330 [label="statement ::= { statement primary_statement -> } [[Expr, _End_, def, eslif, if, return, single_elsif, statement_term, {, }]]"]
90128330 -> 90128000 [label="}"]
90128000 [label="statement ::= { statement primary_statement } -> [[Expr, _End_, def, eslif, if, return, single_elsif, statement_term, {, }]]"]
90127580 [label="primary_statement ::= Expr -> = Expr [[statement_term, }]]"]
90127580 -> 90127250 [label="="]
90127250 [label="primary_statement ::= Expr = -> Expr [[statement_term, }]]"]
90127250 -> 90126920 [label="Expr"]
90126920 [label="primary_statement ::= Expr = Expr -> [[statement_term, }]]"]
90126440 [label="primary_statement ::= if -> ( Expr ) statement elsif_list else [[statement_term, }]]"]
90126440 -> 90126110 [label="("]
90126110 [label="primary_statement ::= if ( -> Expr ) statement elsif_list else [[statement_term, }]]"]
90126110 -> 90125780 [label="Expr"]
90125780 [label="primary_statement ::= if ( Expr -> ) statement elsif_list else [[statement_term, }]]"]
90125780 -> 90124860 [label=")"]
90124860 [label="primary_statement ::= if ( Expr ) -> statement elsif_list else [[statement_term, }]]\nstatement ::= -> primary_statement statement_term [[Expr, eslif, if, return, single_elsif, statement_term, {, }]]\nstatement ::= -> { statement primary_statement } [[Expr, eslif, if, return, single_elsif, statement_term, {, }]]\nprimary_statement ::= -> Expr = Expr [[statement_term]]\nprimary_statement ::= -> if ( Expr ) statement elsif_list else [[statement_term]]\nprimary_statement ::= -> return Expr [[statement_term]]"]
90124860 -> 90123960 [label="statement"]
90124860 -> 90100100 [label="primary_statement"]
90124860 -> 90129450 [label="{"]
90124860 -> 90127580 [label="Expr"]
90124860 -> 90126440 [label="if"]
90124860 -> 90153020 [label="return"]
90123960 [label="primary_statement ::= if ( Expr ) statement -> elsif_list else [[statement_term, }]]\nelsif_list ::= -> [[Expr, if, return, single_elsif, statement_term, {, }]]\nelsif_list ::= -> eslif statement [[Expr, if, return, single_elsif, statement_term, {, }]]\nelsif_list ::= -> elsif_list single_elsif [[Expr, if, return, single_elsif, statement_term, {, }]]"]
90123960 -> 90123230 [label="elsif_list"]
90123960 -> 90151140 [label="eslif"]
90123230 [label="primary_statement ::= if ( Expr ) statement elsif_list -> else [[statement_term, }]]\nelsif_list ::= elsif_list -> single_elsif [[Expr, if, return, single_elsif, statement_term, {, }]]\nelse ::= -> [[Expr, if, return, statement_term, {, }]]\nelse ::= -> else statement [[Expr, if, return, statement_term, {, }]]"]
90123230 -> 90154430 [label="else"]
90123230 -> 90152180 [label="single_elsif"]
90154430 [label="primary_statement ::= if ( Expr ) statement elsif_list else -> [[statement_term, }]]\nelse ::= else -> statement [[Expr, if, return, statement_term, {, }]]\nstatement ::= -> primary_statement statement_term [[Expr, if, return, statement_term, {, }]]\nstatement ::= -> { statement primary_statement } [[Expr, if, return, statement_term, {, }]]\nprimary_statement ::= -> Expr = Expr [[statement_term]]\nprimary_statement ::= -> if ( Expr ) statement elsif_list else [[statement_term]]\nprimary_statement ::= -> return Expr [[statement_term]]"]
90154430 -> 90154000 [label="statement"]
90154430 -> 90100100 [label="primary_statement"]
90154430 -> 90129450 [label="{"]
90154430 -> 90127580 [label="Expr"]
90154430 -> 90126440 [label="if"]
90154430 -> 90153020 [label="return"]
90154000 [label="else ::= else statement -> [[Expr, if, return, statement_term, {, }]]"]
90153020 [label="primary_statement ::= return -> Expr [[statement_term, }]]"]
90153020 -> 90152690 [label="Expr"]
90152690 [label="primary_statement ::= return Expr -> [[statement_term, }]]"]
90152180 [label="elsif_list ::= elsif_list single_elsif -> [[Expr, if, return, single_elsif, statement_term, {, }]]"]
90151140 [label="elsif_list ::= eslif -> statement [[Expr, if, return, single_elsif, statement_term, {, }]]\nstatement ::= -> primary_statement statement_term [[Expr, if, return, single_elsif, statement_term, {, }]]\nstatement ::= -> { statement primary_statement } [[Expr, if, return, single_elsif, statement_term, {, }]]\nprimary_statement ::= -> Expr = Expr [[statement_term]]\nprimary_statement ::= -> if ( Expr ) statement elsif_list else [[statement_term]]\nprimary_statement ::= -> return Expr [[statement_term]]"]
90151140 -> 90150710 [label="statement"]
90151140 -> 90100100 [label="primary_statement"]
90151140 -> 90129450 [label="{"]
90151140 -> 90127580 [label="Expr"]
90151140 -> 90126440 [label="if"]
90151140 -> 90153020 [label="return"]
90150710 [label="elsif_list ::= eslif statement -> [[Expr, if, return, single_elsif, statement_term, {, }]]"]
90146710 [label="module_statements ::=   -> [[_End_, def]]"]
90176700 [label="module_statements ::= global_declaration -> [[_End_, def]]"]
}